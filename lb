#!/bin/bash
# log-book function, creates a template for working through problems.
# Requires a folder called logbook in the home directory
# Usage: lb <problem summary>

function open_file {
    FILENAME=$1
    LINE_JUMP=${2:-0}

    # if using some type of vim, go to the line where the current logbook begins
    # via the '+' parameter
    if [[ "${EDITOR:-vi}" =~ ^(vi|nvim|vim)$ ]]
    then
        ${EDITOR:-vi} $FILENAME \+$LINE_JUMP
    elif [[ "${EDITOR:-vi}" =~ ^(subl|atom)$ ]]
    then
        ${EDITOR:-vi} $FILENAME:$LINE_JUMP
    else
        ${EDITOR:-vi} $FILENAME
    fi
}

if [ -z "$LOGBOOK_DIR" ]
then
    LOGBOOK_DIR=$HOME/logbook
fi

# create directory if it doesn't exist
mkdir -p $LOGBOOK_DIR

now=$(date '+%Y-%m-%d')

# if no parameters provided and logbook entries exist, open the logbook
# with the maximum date.
if [[ $# -eq 0 && $(ls $LOGBOOK_DIR | grep "^[0-9].*md$" | wc -l) -gt 0 ]]
then

    LATEST_ENTRY=$LOGBOOK_DIR/$(ls $LOGBOOK_DIR | grep "^[0-9].*md$" | sort | tail -n1)
    LATEST_UNFINISHED_ENTRY_LNO=$(nl -ba $LATEST_ENTRY | grep -E "(Completed|\s=+)" | grep -B1 "<use" | head -n1 | awk '{print $1-1}')
    echo $LATEST_UNFINISHED_ENTRY_LNO
    open_file $LATEST_ENTRY $LATEST_UNFINISHED_ENTRY_LNO
    exit 0
elif [[ $# -eq 1 && "$1" == "list" ]]
then
    grep -B1 "^=\+" $LOGBOOK_DIR/*.md | grep "md-" | grep -Eo "/[0-9]{4}-[0-9]{2}-[0-9]{2}.*" | sed -e 's#\.md\-#|#' -e 's#^/##g' | awk -F'|' '{a[$1]=a[$1]"\n\t"$2}END{for(k in a){print k, a[k]}}'
    exit 0

elif [[ $# -gt 1 && $1 == "search" ]]
then
    grep -n ${@:2} $LOGBOOK_DIR/*.md
    exit 0
elif [[ $# -eq 1 ]]
then
    printf "\n$1
$(printf "=%.0s" $(seq 1 ${#1}))
Started: $(date '+%Y-%m-%d %H:%M:%S')\n
### 1. Consider the problem youâ€™re attempting to solve\n
### 2. Describe your method for solving it\n
### 3. Record what happened\n
### 4. How could it be improved?\n
Completed: <use: date '+%%Y-%%m-%%d %%H:%%M:%%S'>" >> $LOGBOOK_DIR/$now.md
elif [[ $# -gt 1 ]]
then
    echo "Error: too many parameters"
    echo "Usage: lb [<problem summary>]"
    exit 1
else
    echo "No entries found in $LOGBOOK_DIR. Create and entry via: lb <title>"
    exit 1
fi

open_file $LOGBOOK_DIR/$now.md $(nl -b a $LOGBOOK_DIR/$now.md | grep "$1$" | awk '{print $1}')
