#!/bin/bash
# log-book function, creates a template for working through problems.
# Requires a folder called logbook in the home directory
# Usage: lb <problem summary>
DEFAULT_EDITOR=$EDITOR
if [ -z "$EDITOR" ]
then
    DEFAULT_EDITOR=vi
fi

if [ -z "$LOGBOOK_DIR" ]
then
    DEFAULT_LOGBOOK_DIR=$HOME/logbook
fi

# create directory if it doesn't exist
mkdir -p $DEFAULT_LOGBOOK_DIR

now=$(date '+%Y-%m-%d')
# if no parameters provided and logbook entries exist, open the logbook
# with the maximum date.
if [[ $# -eq 0 && $(ls ~/logbook | grep "^[0-9].*md$" | wc -l) -gt 0 ]]
then

    if [[ "$DEFAULT_EDITOR" =~ ^(vi|nvim|vim)$ ]]
    then
        LATEST_UNFINISHED_ENTRY_LNO=$(nl -ba $DEFAULT_LOGBOOK_DIR/$now.md | grep -P "(Completed|\t=+)" | grep -B1 "<use" | head -n1 | awk '{print $1-1}')
        $DEFAULT_EDITOR $DEFAULT_LOGBOOK_DIR/$(ls ~/logbook | grep "^[0-9].*md$" | sort | tail -n1) \+${LATEST_UNFINISHED_ENTRY_LNO:-0}
    else
        $DEFAULT_EDITOR $DEFAULT_LOGBOOK_DIR/$(ls ~/logbook | grep "^[0-9].*md$" | sort | tail -n1)
    fi
    exit 0
elif [[ $# -eq 1 ]]
then
    printf "\n$1
$(printf "=%.0s" $(seq 1 ${#1}))
Started: $(date '+%Y-%m-%d %H:%M:%S')\n
### 1. Consider the problem youâ€™re attempting to solve\n
### 2. Describe your method for solving it\n
### 3. Record what happened\n
### 4. How could it be improved?\n
Completed: <use: date '+%%Y-%%m-%%d %%H:%%M:%%S'>" >> ~/logbook/$now.md
elif [[ $# -gt 1 ]]
then
    echo "Error: too many parameters"
    echo "Usage: lb [<problem summary>]"
    exit 1
fi

# if using some type of vim, go to the line where the current logbook begins
# via the '+' parameter
if [[ "$DEFAULT_EDITOR" =~ ^(vi|nvim|vim)$ ]]
then
    # find the line number of the 
    LEN_LOGBOOK=$(nl -b a $DEFAULT_LOGBOOK_DIR/$now.md | grep "$1$" | awk '{print $1}')
    $DEFAULT_EDITOR $DEFAULT_LOGBOOK_DIR/$now.md \+$(echo $LEN_LOGBOOK)
else
    $DEFAULT_EDITOR $DEFAULT_LOGBOOK_DIR/$now.md
fi
